# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  push:
    paths-ignore:
      - 'README.md'
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.17'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Get dependencies
      run: |
        go mod download

    - name: Check Terraform And Go Style
      run: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        echo "If this command fails you should run go fmt \"./...\""
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code style differences detected:"
            gofmt -s -l .
            exit 1
        fi
        echo "If this fails you should run \"terraform fmt -recursive\""
        terraform fmt -recursive -check

    - name: Build
      run: |
        go build -v .


  # run acceptance tests in a matrix with Terraform core versions
  test:
    name: Matrix Test
    needs: build
    concurrency: epcc-store-lock
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.1.5'
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.17'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Get dependencies
      run: |
        go mod download

    - name: TF acceptance tests
      timeout-minutes: 15
      env:
        TF_ACC: "1"
        TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
        EPCC_CLIENT_ID: ${{ secrets.EPCC_CLIENT_ID }}
        EPCC_CLIENT_SECRET: ${{ secrets.EPCC_CLIENT_SECRET }}
        EPCC_BETA_API_FEATURES: account-management
        EPCC_API_BASE_URL: ${{ secrets.EPCC_API_BASE_URL }}

        # Set whatever additional acceptance test env vars here. You can
        # optionally use data from your repository secrets using the
        # following syntax:
        # SOME_VAR: ${{ secrets.SOME_VAR }}

      run: |
        sudo apt install jq
        bash ./nuke_store.sh
        go test -v -cover ./internal/provider/